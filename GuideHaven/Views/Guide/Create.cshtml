@model GuideHaven.Models.Guide

@{
    ViewData["Title"] = "Create";
    int index = 0;
}

<h2>Create</h2>

<h4>Guide</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="GuideName" class="control-label"></label>
                <input asp-for="GuideName" class="form-control" />
                <span asp-validation-for="GuideName" class="text-danger"></span>
            </div>
            <div id="step_holder" class="form-group">
                <label asp-for="GuideSteps[index].Header" class="control-label"></label>
                @Html.TextBoxFor(model => model.GuideSteps[index].Header, new { style = "display: block" })
                <label asp-for="GuideSteps[index].Content" class="control-label"></label>
                @Html.TextAreaFor(model => model.GuideSteps[index].Content, new { style = "display: block" })
            </div>
            <button type="button" id="create_step" class="btn btn-primary" value="Create step">Create step</button>
            <div class="form-group">    
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    $(document).ready(function () {
        $("#create_step").add("click", function () {
            @{index++;}
            $("#step_holder").append('@Html.TextBoxFor(model => model.GuideSteps[index].Header, new { style = "display: block" })');
            $("#step_holder").append('@Html.TextAreaFor(model => model.GuideSteps[index].Content, new { style = "display: block" })');
            console.log(@index);
        });
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
