@model GuideHaven.Models.Guide

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Guide</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="GuideId" />
            <div class="form-group">
                <label asp-for="GuideName" class="control-label"></label>
                <input asp-for="GuideName" class="form-control" />
                <span asp-validation-for="GuideName" class="text-danger"></span>
                @{int index = 0; }
                @foreach (var item in Model.GuideSteps)
                {
                    <label class="control-label" style="display: block">Step @(index + 1)</label>
                    <label asp-for="GuideSteps[index].Header" class="control-label"></label>
                    @Html.TextBoxFor(model => model.GuideSteps[index].Header, new { style = "display: block" })
                    <label asp-for="GuideSteps[index].Content" class="control-label"></label>
                    @Html.TextAreaFor(model => model.GuideSteps[index].Content, new { style = "display: block" })
                    index++;
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
