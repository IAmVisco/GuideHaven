@inject SignInManager<IdentityUser> SignInManager
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<IdentityLocalizer> Localizer
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">@Localizer["Profile"]</a></li>
    <li class="@ManageNavPages.GuidesNavClass(ViewContext)"><a asp-page="./GuideManagement">@Localizer["Guide"]</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">@Localizer["Password"]</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">@Localizer["ExternalLogins"]</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">@Localizer["2fa"]</a></li>
    <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a asp-page="./PersonalData">@Localizer["PersonalData"]</a></li>
</ul>
